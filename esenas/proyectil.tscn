[gd_scene load_steps=6 format=3 uid="uid://4voq8ao4cqwy"]

[ext_resource type="Script" uid="uid://cny3cfb5022q0" path="res://scripts/proyectil.gd" id="1_vveip"]

[sub_resource type="Shader" id="Shader_budpa"]
code = "shader_type spatial;
render_mode blend_mix, cull_back, unshaded, depth_prepass_alpha;

// Colores
uniform vec4 bubble_color : source_color = vec4(0.6, 0.85, 1.0, 0.25);
uniform vec3 rim_color    : source_color = vec3(1.0, 1.0, 1.0);

// Toon lighting
uniform vec3 light_color  : source_color = vec3(1.0, 1.0, 1.0);
uniform vec3 shadow_color : source_color = vec3(0.5, 0.6, 0.8);
uniform float toon_threshold : hint_range(0.0, 1.0) = 0.5;

// Fresnel rim
uniform float rim_intensity : hint_range(0.0, 3.0) = 1.0;
uniform float rim_power : hint_range(0.5, 8.0) = 2.0;

uniform float wobble_speed : hint_range(0.0, 10.0) = 0.0;
uniform float wobble_amp   : hint_range(0.0, 0.1) = 0.02;

void vertex() {
    if (wobble_speed > 0.0 && wobble_amp > 0.0) {
        float w = sin(TIME * wobble_speed + VERTEX.x * 3.1 + VERTEX.y * 2.7 + VERTEX.z * 1.9) * wobble_amp;
        VERTEX += NORMAL * w;
    }
}

void fragment() {
    // DirecciÃ³n de la luz principal (Godot 4 te da LIGHT y LIGHT_COLOR)
    vec3 light_dir = normalize(light_color);
    float ndotl = max(dot(NORMAL, light_dir), 0.0);

    // Toon shading
    vec3 toon_col = ndotl > toon_threshold ? light_color : shadow_color;

    // Fresnel
    vec3 view_n = normalize(NORMAL);
    vec3 view_dir = normalize(-VIEW);
    float fres = pow(1.0 - clamp(dot(view_n, view_dir), 0.0, 1.0), rim_power);

    // Resultado final
    ALBEDO = mix(bubble_color.rgb * toon_col, rim_color, fres * rim_intensity);
    ALPHA  = bubble_color.a + fres * 0.3;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_vveip"]
render_priority = 0
shader = SubResource("Shader_budpa")
shader_parameter/bubble_color = Color(0.34902, 0.513726, 0.929412, 0.321569)
shader_parameter/rim_color = Color(0.196133, 0.300806, 0.606707, 1)
shader_parameter/light_color = Color(1, 1, 1, 1)
shader_parameter/shadow_color = Color(0.5, 0.6, 0.8, 1)
shader_parameter/toon_threshold = 0.33
shader_parameter/rim_intensity = 0.3
shader_parameter/rim_power = 2.0
shader_parameter/wobble_speed = 2.419
shader_parameter/wobble_amp = 0.07

[sub_resource type="SphereMesh" id="SphereMesh_cqfky"]
material = SubResource("ShaderMaterial_vveip")

[sub_resource type="SphereShape3D" id="SphereShape3D_rfikj"]

[node name="Proyectil" type="RigidBody3D"]
collision_layer = 2
collision_mask = 2
mass = 0.022
gravity_scale = -1.889
script = ExtResource("1_vveip")
velocidad = 10.0

[node name="MeshInstance3D" type="MeshInstance3D" parent="."]
transform = Transform3D(1.86, 0, 0, 0, 1.86, 0, 0, 0, 1.86, 0, 0, 0)
layers = 2
mesh = SubResource("SphereMesh_cqfky")
skeleton = NodePath("../CollisionShape3D")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
transform = Transform3D(1.86, 0, 0, 0, 1.86, 0, 0, 0, 1.86, 0, 0, 0)
shape = SubResource("SphereShape3D_rfikj")
